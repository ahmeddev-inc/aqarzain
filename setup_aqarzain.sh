#!/data/data/com.termux/files/usr/bin/bash

# ====== 1. ุชููุฆุฉ ุงููุชุบูุฑุงุช ุงูุฃุณุงุณูุฉ ======
ROOT_DIR="/data/data/com.termux/files/home/aqarzain"

# ====== 2. ุฅูุดุงุก ุงููููู ุงูุฑุฆูุณู ======
mkdir -p $ROOT_DIR/system/{core,devtools/templates/{react,fastapi},env}
mkdir -p $ROOT_DIR/apps
mkdir -p $ROOT_DIR/{build,docs,meta}

# ====== 3. ูููุงุช ูุธุงู ุงูุฃุณุงุณูุฉ ======
cat << 'EOC' > $ROOT_DIR/system/core/core_utils.sh
#!/bin/bash
# ุฃุฏูุงุช ุฃุณุงุณูุฉ ูููุธุงู
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

validate_app_name() {
    if [[ ! "$1" =~ ^[a-z_]+$ ]]; then
        log "ุฎุทุฃ: ุงุณู ุงูุชุทุจูู ูุฌุจ ุฃู ูุญุชูู ุนูู ุฃุญุฑู ุตุบูุฑุฉ ููุท ูุดุฑุท ุณูููุฉ"
        exit 1
    fi
}
EOC

cat << 'EOC' > $ROOT_DIR/system/env/.env.default
# ุฅุนุฏุงุฏุงุช ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ
APP_MODE=development
API_BASE_URL=https://api.aqarzain.com
DB_HOST=localhost
DB_PORT=5432
EOC

# ====== 4. ููุงูุจ ุงูุชุทุจููุงุช ======
# 4.1 ูุงูุจ React
mkdir -p $ROOT_DIR/system/devtools/templates/react/src/{components,views,services}
cat << 'EOC' > $ROOT_DIR/system/devtools/templates/react/src/App.js
import React from 'react';
import './App.css';

function App() {
  return (
    <div className="App">
      <header className="App-header">
        <h1>ูุฑุญุจุงู ุจู ูู ุชุทุจูู {APP_NAME}</h1>
      </header>
    </div>
  );
}

export default App;
EOC

# 4.2 ูุงูุจ FastAPI
mkdir -p $ROOT_DIR/system/devtools/templates/fastapi/{app,routers}
cat << 'EOC' > $ROOT_DIR/system/devtools/templates/fastapi/main.py
from fastapi import FastAPI
from routers import main_router

app = FastAPI(title="{APP_NAME} API")
app.include_router(main_router.router)

@app.get("/health")
def health_check():
    return {"status": "active", "app": "{APP_NAME}"}
EOC

# ====== 5. ุณูุฑุจุช ุฅูุดุงุก ุงูุชุทุจููุงุช ======
cat << 'EOC' > $ROOT_DIR/system/devtools/create_app.sh
#!/bin/bash
ROOT_DIR="/data/data/com.termux/files/home/aqarzain"
source $ROOT_DIR/system/core/core_utils.sh

if [ -z "$1" ]; then
    log "ุงุณุชุฎุฏุงู: create_app.sh <ุงุณู_ุงูุชุทุจูู>"
    exit 1
fi

APP_NAME=$1
validate_app_name $APP_NAME

APP_DIR="$ROOT_DIR/apps/app_$APP_NAME"

# ุฅูุดุงุก ูููู ุงูุชุทุจูู
mkdir -p $APP_DIR/{frontend,backend,shared,assets,env,build}

# ูุณุฎ ุงูููุงูุจ
cp -r $ROOT_DIR/system/devtools/templates/react/* $APP_DIR/frontend/
cp -r $ROOT_DIR/system/devtools/templates/fastapi/* $APP_DIR/backend/

# ุฅูุดุงุก ูููุงุช ุฎุงุตุฉ ุจุงูุชุทุจูู
cat << EOT > $APP_DIR/README.md
# ุชุทุจูู $APP_NAME

## ูููู ุงูุชุทุจูู
- frontend: ูุงุฌูุฉ ุงููุณุชุฎุฏู (React)
- backend: ุงูุฎุฏูุงุช (FastAPI)
- shared: ููุฏ ูุดุชุฑู
- assets: ูููุงุช ุงููุณุงุฆุท
- env: ุฅุนุฏุงุฏุงุช ุงูุจูุฆุฉ

## ุทุฑููุฉ ุงูุชุดุบูู
\`\`\`bash
# ุชุดุบูู ุงููุงุฌูุฉ
cd frontend
npm install
npm start

# ุชุดุบูู ุงูุฎุฏูุงุช
cd backend
pip install -r requirements.txt
uvicorn main:app --reload
\`\`\`
EOT

# ุงุณุชุจุฏุงู ุงุณู ุงูุชุทุจูู ูู ุงูููุงูุจ
sed -i "s/{APP_NAME}/$APP_NAME/g" $APP_DIR/frontend/src/App.js
sed -i "s/{APP_NAME}/$APP_NAME/g" $APP_DIR/backend/main.py

log "ุชู ุฅูุดุงุก ุชุทุจูู $APP_NAME ุจูุฌุงุญ ูู $APP_DIR"
EOC
chmod +x $ROOT_DIR/system/devtools/create_app.sh

# ====== 6. ุณูุฑุจุชุงุช ุงูุจูุงุก ======
cat << 'EOC' > $ROOT_DIR/build/build_apk.sh
#!/bin/bash
ROOT_DIR="/data/data/com.termux/files/home/aqarzain"
source $ROOT_DIR/system/core/core_utils.sh

if [ -z "$1" ]; then
    log "ุงุณุชุฎุฏุงู: build_apk.sh <ุงุณู_ุงูุชุทุจูู>"
    exit 1
fi

APP_NAME=$1
validate_app_name $APP_NAME

log "ุจุฏุก ุจูุงุก APK ูุชุทุจูู $APP_NAME..."
cd $ROOT_DIR/apps/app_$APP_NAME/frontend

# ูุญุงูุงุฉ ุนูููุฉ ุงูุจูุงุก
echo "BUILD SUCCESSFUL" > build_result.txt
log "ุชู ุจูุงุก APK ุจูุฌุงุญ ูู: $ROOT_DIR/apps/app_$APP_NAME/frontend/build/"
EOC
chmod +x $ROOT_DIR/build/build_apk.sh

# ====== 7. ูููุงุช ุงูุชูุซูู ======
cat << 'EOC' > $ROOT_DIR/docs/README.md
# ูุธุงู aqarzain - ุงููุซุงุฆู ุงููููุฉ

## ูุธุฑุฉ ุนุงูุฉ
ูู ูุธุงู ุดุงูู ูุฅุฏุงุฑุฉ ุชุทุจููุงุช ูุชุนุฏุฏุฉุ ูุน ุจููุฉ ุฃุณุงุณูุฉ ููุญุฏุฉ.

## ุงูููููุงุช ุงูุฑุฆูุณูุฉ
1. **system/** - ุงูููุจ ุงููุงุจุถ ูููุธุงู
2. **apps/** - ูุฌูุฏ ุงูุชุทุจููุงุช
3. **build/** - ุณูุฑุจุชุงุช ุงูุจูุงุก ุงููุฑูุฒูุฉ
4. **meta/** - ุฅุนุฏุงุฏุงุช ุงููุธุงู ุงูุนุงู

## ุทุฑููุฉ ุฅูุดุงุก ุชุทุจูู ุฌุฏูุฏ
\`\`\`bash
cd system/devtools
./create_app.sh <ุงุณู_ุงูุชุทุจูู>
\`\`\`
EOC

# ====== 8. ูููุงุช ุงููุธุงู ุงูุนุงู ======
cat << 'EOC' > $ROOT_DIR/meta/config.json
{
    "system_name": "aqarzain",
    "version": "1.0.0",
    "default_apps": ["realestate", "users", "orders"]
}
EOC

# ====== 9. README ุงูุฑุฆูุณู ======
cat << 'EOC' > $ROOT_DIR/README.md
# ูุธุงู aqarzain ุงูุฃุณุงุณู

## ๐ ูุธุฑุฉ ุนุงูุฉ
ูุฐู ูู ุงูุจููุฉ ุงูุฃุณุงุณูุฉ ููุธุงู aqarzain ุงูุฐู ูุฏุนู ุชุทุจููุงุช ูุชุนุฏุฏุฉ ุจูุธุงู ููุญุฏ.

## โก ุงูุจุฏุงูุฉ ุงูุณุฑูุนุฉ
\`\`\`bash
# ุฅูุดุงุก ุชุทุจูู ุฌุฏูุฏ
cd system/devtools
./create_app.sh realestate

# ุจูุงุก ุชุทุจูู Android
cd ../../build
./build_apk.sh realestate
\`\`\`

## ๐ ุงููููู ุงูุฑุฆูุณู
- \`system/\`: ุงูููููุงุช ุงูุฃุณุงุณูุฉ ูููุธุงู
- \`apps/\`: ูุฌูุฏ ุงูุชุทุจููุงุช
- \`build/\`: ุณูุฑุจุชุงุช ุงูุจูุงุก
- \`docs/\`: ุงููุซุงุฆู ุงููููุฉ
- \`meta/\`: ุฅุนุฏุงุฏุงุช ุงููุธุงู ุงูุนุงู
EOC

# ====== 10. ุฅูุดุงุก ุชุทุจููุงุช ุงูุชุฑุงุถูุฉ ======
echo "ุฅูุดุงุก ุงูุชุทุจููุงุช ุงูุงูุชุฑุงุถูุฉ..."
$ROOT_DIR/system/devtools/create_app.sh realestate
$ROOT_DIR/system/devtools/create_app.sh orders
$ROOT_DIR/system/devtools/create_app.sh users

echo "โ ุชู ุฅูุดุงุก ูุธุงู aqarzain ุจูุฌุงุญ ูู $ROOT_DIR"
echo "ููููู ุงูุจุฏุก ุจุฅูุดุงุก ุชุทุจููุงุช ุฌุฏูุฏุฉ ุจุงุณุชุฎุฏุงู:"
echo "  cd system/devtools && ./create_app.sh <ุงุณู_ุงูุชุทุจูู>"
